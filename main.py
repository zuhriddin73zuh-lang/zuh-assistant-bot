# -*- coding: utf-8 -*-
import os
import telebot
from flask import Flask, request
import requests

# ==========================
# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
# ==========================
BOT_TOKEN = os.getenv("BOT_TOKEN", "").strip()       # Telegram
CHAT_API_KEY = os.getenv("CHAT_API_KEY", "").strip() # ChatGPT –∏–ª–∏ –¥—Ä—É–≥–æ–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π AI
IMAGE_API_KEY = os.getenv("IMAGE_API_KEY", "").strip() # AI –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
VIDEO_API_KEY = os.getenv("VIDEO_API_KEY", "").strip() # AI –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—Å–µ —Ç–æ–∫–µ–Ω—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
if not BOT_TOKEN:
    raise ValueError("BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–æ–±–µ–ª—ã")
if not CHAT_API_KEY:
    raise ValueError("CHAT_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
if not IMAGE_API_KEY:
    raise ValueError("IMAGE_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
if not VIDEO_API_KEY:
    raise ValueError("VIDEO_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

# ==========================
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞
# ==========================
bot = telebot.TeleBot(BOT_TOKEN)
app = Flask(__name__)

# ==========================
# –ö–æ–º–∞–Ω–¥–∞ /start
# ==========================
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø Zuh Assistant Bot ü§ñ\n–Ø –º–æ–≥—É —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ç–µ–∫—Å—Ç—ã, –±–∞–Ω–Ω–µ—Ä—ã –∏ –∫–æ—Ä–æ—Ç–∫–∏–µ –≤–∏–¥–µ–æ.")

# ==========================
# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
# ==========================
@bot.message_handler(func=lambda message: True)
def handle_text(message):
    user_text = message.text

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ —á–µ—Ä–µ–∑ Chat API
    chat_response = generate_chat_response(user_text)

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–±–∞–Ω–Ω–µ—Ä–∞)
    image_url = generate_image(user_text)

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –≤–∏–¥–µ–æ
    video_url = generate_video(user_text)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    response_msg = f"–¢–µ–∫—Å—Ç:\n{chat_response}\n\n–ë–∞–Ω–Ω–µ—Ä: {image_url}\n–í–∏–¥–µ–æ: {video_url}"
    bot.reply_to(message, response_msg)

# ==========================
# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ API
# ==========================
def generate_chat_response(prompt):
    # –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞ –∫ Chat API
    url = "https://api.openai.com/v1/chat/completions"  # –∏–ª–∏ —Å–≤–æ–π —Å–µ—Ä–≤–∏—Å
    headers = {"Authorization": f"Bearer {CHAT_API_KEY}"}
    json_data = {
        "model": "gpt-3.5-turbo",
        "messages": [{"role": "user", "content": prompt}],
        "max_tokens": 200
    }
    r = requests.post(url, headers=headers, json=json_data)
    if r.status_code == 200:
        return r.json()["choices"][0]["message"]["content"]
    return "–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞"

def generate_image(prompt):
    # –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞ –∫ Image API
    url = "https://api.fakeimage.ai/generate"
    headers = {"Authorization": f"Bearer {IMAGE_API_KEY}"}
    json_data = {"prompt": prompt, "size": "512x512"}
    r = requests.post(url, headers=headers, json=json_data)
    if r.status_code == 200:
        return r.json().get("url", "–ù–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
    return "–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"

def generate_video(prompt):
    # –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞ –∫ Video API
    url = "https://api.fakevideo.ai/generate"
    headers = {"Authorization": f"Bearer {VIDEO_API_KEY}"}
    json_data = {"prompt": prompt, "duration": 10}
    r = requests.post(url, headers=headers, json=json_data)
    if r.status_code == 200:
        return r.json().get("video_url", "–ù–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∏–¥–µ–æ")
    return "–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ"

# ==========================
# –í–µ–±—Ö—É–∫ –¥–ª—è Telegram
# ==========================
@app.route('/' + BOT_TOKEN, methods=['POST'])
def webhook():
    json_str = request.stream.read().decode("utf-8")
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return "OK", 200

@app.route('/')
def index():
    return "Zuh Assistant Bot —Ä–∞–±–æ—Ç–∞–µ—Ç!"

# ==========================
# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
# ==========================
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=10000)













